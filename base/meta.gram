# this minimum meta.gram is meant to be implemented manually
# then use this to generate the real peg parser will be easier

grammar[Grammar]:
    | rule (NEWLINE rule)* EOF { Grammar { rules } }

rule[Rule]:
    | NAME RSTYPE ": " alter NEWLINE {
        Rule { name, rstype, alters: vec![alter] }
    }
    | NAME RSTYPE ":" NEWLINE ("    | " alter NEWLINE)+ {
        Rule { name, rstype, alters }
    }
    
alter[Alter]:
    | item (" " item)* " " INLINE { Alter { items, inline } }

item[Item]:
    | NAME "=" ~ atom { Item::Exact(name, atom) }
    | atom { Item::Exact(None, atom) }
    | "~" { Item::Cut }

atom[Atom]:
    | STRING { Atom::String(string) }
    | NAME { Atom::Name(name) }
