grammar[Grammar]:
    | rules EOF { Grammar { rules } }

rules[Vec<Rule>]:
    | rule rules { chain!(rules, rule) }
    | rule { vec![rule] }

rule[Rule]:
    | NAME RSTYPE ":" alter { Rule { name, rstype, alters } }
    | NAME RSTYPE ":" "|" alters { Rule { name, rstype, alters } }

alters[Vec<Alter>]:
    | alter "|" alters { chain!(alters, alter) }
    | alter { vec![alter] }

alter[Alter]:
    | items INLINE { Alter { items, inline } }

items[Vec<Item>]:
    | item items { chain!(items, item) }
    | item { vec![item] }

item[Item]:
    | atom "?" { Item::Optional(atom) }
    | atom "*" { Item::LoopZero(atom) }
    | atom "+" { Item::LoopOnce(atom) }
    | atom { Item::Exact(atom) }

atom[Atom]:
    | NAME { Atom::Name(name) }
    | STRING { Atom::String(string) }

